# YOLOv5 🚀 by Ultralytics, GPL-3.0 license
# Hyperparameters for COCO training from scratch
# python train.py --batch 40 --cfg yolov5m.yaml --weights '' --data coco.yaml --img 640 --epochs 300
# See tutorials for hyperparameter evolution https://github.com/ultralytics/yolov5#tutorials


################## 1、训练相关参数  ##################
lr0: 0.01  # 学习率的初始值，通常使用SGD时为0.01，使用Adam时为0.001
lrf: 0.1  # OneCycleLR 学习率调度器中的最终学习率（lr0 * lrf）

# momentum 动量可以理解为参数更新的惯性，类似于小球滚动的惯性。
# 它通过维护一个动量向量，记录之前梯度方向的加权平均值，
# 并将其用于参数更新，可以加快训练速度，提高模型稳定性。
# 较小的动量可以使更新方向更加平稳
# 较大的动量可以加速参数更新。
momentum: 0.937  # # 学习率动量

# 权重衰减（weight decay）是一种常见的正则化技术，旨在减少模型的复杂性，防止过拟合。
# weight decay值越大，正则化强度越大，模型泛化能力会更好。但是太大会导致模型欠拟合。
weight_decay: 0.0005  # optimizer权重衰减系数 5e-4

# 在训练深度学习模型时，有时候需要先使用一个较小的学习率来进行预热，以避免在初始阶段出现不稳定的梯度或损失的情况。
# warmup_epochs就是控制预热的epoch数，也就是在训练的前几个epoch使用较小的学习率，使得模型能够更快地收敛到稳定的状态。
# 在预热阶段结束后，学习率会逐渐增加到初始设定的学习率，然后继续按照设定的学习率进行训练。
warmup_epochs: 3.0  # warmup epochs (fractions ok)
warmup_momentum: 0.8  #预热学习率动量
warmup_bias_lr: 0.1  #预热学习率
##################  训练相关参数   ##################



################### 2、损失函数相关参数  ###################
# box通常指的是bounding box，即目标的边框。是一个超参数，控制bounding box loss的权重。
box: 0.05  # giou损失的系数
cls: 0.5  # 分类损失的系数
cls_pw: 1.0  #分类BCELoss中正样本的权重
obj: 1.0  # 置信度损失权重

# 如果正样本数量较少，YOLOv3 会增加正样本的权重，以便更多地关注正样本，提高检测准确率。
# 如果正样本数量较多，YOLOv3 会减小正样本的权重，以便更多地关注负样本，减少误检率。
obj_pw: 1.0  # 置信度损失的二元交叉熵损失中正样本的权重

# fl_gamma 是 Focal Loss 中的一个参数，用于调整损失函数的加权。
fl_gamma: 0.0  # focal loss gamma (efficientDet default gamma=1.5)

# anchors: 3  # anchors per output layer (0 to ignore)
###################  损失函数相关参数  ###################


####################  3、其他几个参数  ####################
 # IoU 是指检测框（预测框）和真实框之间的交并比。当预测框和真实框之间的 IoU 大于 iou_t 时，视为检测正确，否则视为检测错误。
# 比如，iuo_t设置为0.5，只有预测框和真实框之间的Iou大于0.5才会视为正确检测。
iou_t: 0.20 # Iou阈值，用于预测框和真实框之间的匹配。

# anchor的阈值，用于筛选anchor。跟iou_t道理一样
# 这个参数就是控制哪些anchor boxes会被用来匹配目标。anchor_t越小，则越容易匹配更小的目标，anchor_t越大，则越容易匹配更大的目标
# 对于一些小的目标，因为它们的大小与anchor的大小差别较大，需要使用比较小的anchor box进行匹配，此时设置一个小的anchor_t可以让这些小目标更容易被匹配上。
# 而对于一些大目标，它们的大小与anchor大小的差别较小，可以使用相对较大的anchor进行匹配，此时设置一个大的anchor_t可以使得大目标更容易被匹配。
anchor_t: 4.0
#################### 其他几个参数  #######################



####################   4、数据增强相关参数  ####################

# hsv_h、hsv_s、hsv_v表示图像HSV颜色空间的色调、饱和度、明度的增强参数。
# hsv_h、hsv_s、hsv_v的取值范围都是[0, 1]，可以尝试不同的取值来进行比较。
# 值越大，强度越大
hsv_h: 0.015  # 色调
hsv_s: 0.7  # 饱和度
hsv_v: 0.4  # 明度

# 表示图像旋转、平移、缩放、扭曲的增强参数
degrees: 0.0  # 旋转角度
translate: 0.1  # 水平和垂直平移
scale: 0.5  # 缩放
shear: 0.0  # 剪切

# 是数据增强中的一种，它会对图像进行透视变换，使得图像看起来像是从不同的角度拍摄的。
perspective: 0.0  # 透视变换参数

# flipud、fliplr表示图像上下翻转、左右翻转的增强概率。
flipud: 0.0  # 上下翻转
fliplr: 0.5  # 左右翻转

# 数据增强的方式，可以用来增强训练集的多样性，从而提高模型的泛化性能。
mosaic: 1.0  # 以一定的概率将四张图片拼接成一张，增强了模型对多物体的感知能力和位置估计能力
mixup: 0.0  # 以一定的概率对两张图片进行线性混合，增强了模型对物体形状和纹理的学习能力
copy_paste: 0.0  # 以一定的概率将一张图片的一部分复制到另一张图片上，增强了模型对物体的位置和尺度变化的鲁棒性。
####################  数据增强相关参数  ####################